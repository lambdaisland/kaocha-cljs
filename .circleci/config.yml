version: 2.1

orbs:
  kaocha: lambdaisland/kaocha@0.0.1
  clojure: lambdaisland/clojure@0.0.2
  win: circleci/windows@2.2.0

commands:
  checkout_and_run:
    parameters:
      clojure_version:
        type: string
    steps:
      - checkout
      - clojure/with_cache:
          cache_version: << parameters.clojure_version >>
          steps:
            - run: clojure -e '(println (System/getProperty "java.runtime.name") (System/getProperty "java.runtime.version") "\nClojure" (clojure-version))'
            # - kaocha/execute:
            #     args: "unit --reporter documentation --plugin cloverage --codecov"
            #     clojure_version: << parameters.clojure_version >>
            - kaocha/execute:
                args: "integration --reporter documentation --plugin cloverage --codecov"
                clojure_version: << parameters.clojure_version >>
      # - kaocha/upload_codecov:
      #     flags: unit
      - kaocha/upload_codecov:
          flags: integration
          file: target/coverage/integration*/codecov.json

jobs:
  java-15-clojure-1_10:
    executor: clojure/openjdk15
    steps: [{checkout_and_run: {clojure_version: "1.10.1"}}]
  java-11-clojure-1_10:
    executor: clojure/openjdk11
    steps: [{checkout_and_run: {clojure_version: "1.10.1"}}]
  windows-test:
    executor:
      name: win/default
    steps:
      - checkout
      - run:
          command: $(echo hello | Out-Host; $?) -and $(echo world | Out-Host; $?)
          shell: powershell.exe
      - run:
          command: Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://download.clojure.org/install/win-install-1.10.3.839.ps1')
          shell: powershell.exe
      - run:
          command: clojure -e "(println (System/getProperty \`"java.runtime.name\`") (System/getProperty \`"java.runtime.version\`") \`"`nClojure\`" (clojure-version))"
          shell: powershell.exe
      - run:
          command: |
            $ErrorActionPreference = "Stop"
            clojure "-J-Dline.separator=`n" -A:dev:test -m kaocha.runner unit  2>&1
            exit $lastexitcode
          shell: powershell.exe

  # java-9-clojure-1_9:
  #   executor: clojure/openjdk9
  #   steps: [{checkout_and_run: {clojure_version: "1.9.0"}}]

  # java-8-clojure-1_10:
  #   executor: clojure/openjdk8
  #   steps: [{checkout_and_run: {clojure_version: "1.10.0-RC3"}}]

  # java-8-clojure-1_9:
  #   executor: clojure/openjdk8
  #   steps: [{checkout_and_run: {clojure_version: "1.9.0"}}]

workflows:
  kaocha_test:
    jobs:
      - java-15-clojure-1_10
      - java-11-clojure-1_10
      # - java-9-clojure-1_9
      # - java-8-clojure-1_10
      # - java-8-clojure-1_9
      - windows-test
